-RoundRobin (acts as the scheduler that the distributor uses)
-Fix shortest job first algorithm (can take the current thing for round robin)
-Fix PID queue (seems to not properly distribute or put back PIDs)
-Fix memory issue in dispatcher for deleting processes
-fix rand not working for randomizing created processes
-Need to rewrite program to be [one thing that takes input and shoots instructions] and [a part that simply waits and loads instructions as recieved] in order for threading to be better than file string input
	-Fix processes not being properly added when using threading

-Add memory support:
	-Fix memory count (is being added incorrectly when totaled)
	-Add ability to store memory in processes
	-Add ability to have memory in templates
	-Add manager (block or pages) to prevent process creation if it can't get enough memory (either just stop it or add it to a queue(use new process array for storing them)

-Add Forking
	-Add forking function to the template
	-Might need to fix the parent being able to die before the child

-Change dispatcher to be a big dispatcher that distributes to smaller dispatchers that actually manage processes

-Can implement force killing a process by emptying its events (use empty() function on event queue)

IDEA:
Circular dependency, so things need to be reordered